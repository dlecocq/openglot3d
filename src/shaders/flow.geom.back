);
}

void main() {

	float alpha;

	int i;
	
	int count;
	count = 20;
	
	float step;
	float dalpha;
	
	dalpha = 1.0 / count;
	step = 0.01;
	
	alpha = dalpha;
	
	vec3 p0;
	vec3 p1;
	vec3 p2;
	vec3 p3;
	
	vec3 p;

	float t;
	
	p = gl_PositionIn[0].xyz;
	t = gl_PositionIn[0].w;
	
	gl_FrontColor = vec4(1.0, 0.0, 0.0, alpha);
	gl_Position = gl_ModelViewProjectionMatrix * vec4(p.x, p.y, p.z, 1.0);
	EmitVertex();
	
	for (i = 0; i < count; ++i) {
		p0 = step * function(p.x, p.y, p.z, t);
		p1 = step * function(p0.x / 2.0 + p.x, p0.y / 2.0 + p.y, p0.z / 2.0 + p.z, t);
		p2 = step * function(p1.x / 2.0 + p.x, p1.y / 2.0 + p.y, p1.z / 2.0 + p.z, t);
		p3 = step * function(p2.x / 2.0 + p.x, p2.y / 2.0 + p.y, p2.z / 2.0 + p.z, t);
		p = p + p0 / 6.0 + p1 / 3.0 + p2 / 3.0 + p3 / 6.0;
		
		alpha += dalpha;
		gl_FrontColor = vec4(1.0, 0.0, 0.0, alpha);
		gl_Position = gl_ModelViewProjectionMatrix * vec4(p.x, p.y, p.z, 1.0);
		EmitVertex();
	}
		
	EndPrimitive();
}
